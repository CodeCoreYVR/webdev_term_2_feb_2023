import fs from 'fs';
import axios from 'axios';
import cheerio from 'cheerio';
import faker from 'faker';
import cowsay from 'cowsay';

const url = 'https://vancouver.craigslist.org/';
console.log(`Making request to ${url}...\n`)

// Make a request for the Vancouver Craigslist page
axios.get(url)
  .then(response => {
    // Load the HTML into Cheerio
    const $ = cheerio.load(response.data);

    // Get the href attribute of the first link on the page
    const firstLinkHref = $('a').first().attr('href');
    console.log(`First link href: ${firstLinkHref}`);

    // Change the text for all links on the page (except the calendar) to be something generated by Faker
    $('a:not(.datepicker)').each((i, element) => {
      // Generate fake link text using Faker
      const fakeLinkText = faker.lorem.words();

      // Set the link's text to the fake link text
      $(element).text(fakeLinkText);

      // Set the link's href attribute to http://www.codecore.ca
      $(element).attr('href', 'http://www.codecore.ca');
    });
    console.log(`All link's text were successfully changed. New Contents of first link: ${$('a').first().text()}`)
    console.log(`All link's attributes successfully changed. New Attr of first link: ${$('a').first().attr('href')}`)

    // Make all of the text on the page use the Papyrus font. If successful logs a success message, else logs failed message
    $('*').css('font-family', 'Papyrus') 
      ? console.log(`All text's font-family successfully changed to: Papyrus`) 
      : console.log('Something went wrong, font-family was not changed');

    // Write the modified HTML to a file
    const fileName = 'vancouver-craigslist.html';
    fs.writeFileSync(fileName, $.html());

    // Use cowsay to log to the console if it's successful
    console.log(cowsay.say({
      text: `Contents successfully saved to ${fileName}`,
      e: 'oO', // Sets the cow's eyes to "oO"
      T: 'U '  // Adds a "U" to the cow's tongue
    }));
  })
  .catch(error => {
    console.log(error);
  });